{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robo","i","SearchBox","onChange","type","placeholder","Scroll","props","style","overflowY","height","border","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,WACzD,gCACI,4BAAIJ,IACJ,4BAAIC,WCULI,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACA,8BAEQA,EAAOC,KAAK,SAACC,EAAKC,GACd,OACI,cAAC,EAAD,CAAcV,GAAKO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,OAA7DQ,SCGhBC,EAXG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACI,uBACIT,UAAU,kCACVU,KAAK,SACLC,YAAY,gBACZF,SAAUA,KCGPG,G,MATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,QAASC,OAAQ,mBAA1D,SACKJ,EAAMK,aCkBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACH,+DAEJG,KAAKX,MAAMK,a,GAhBCQ,aCwDZC,E,kDAlDX,aAAe,IAAD,8BACV,gBAoBJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SArB1C,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJP,E,gEASO,IAAD,OAEhBG,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACrB,OAAQiC,S,+BAWzB,IAAD,EAC0Bb,KAAKJ,MAA5BhB,EADH,EACGA,OAAQ0B,EADX,EACWA,YACVQ,EAAiBlC,EAAOmC,QAAO,SAAAjC,GACjC,OAAOA,EAAKR,KAAK0C,cAAcC,SAASX,MAG5C,OAAS1B,EAAOsC,OAGR,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,SAAUe,KAAKI,iBAC1B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAUkC,WAPnC,oBAAItC,UAAW,QAAf,yB,GAnCK0B,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.bc7e857c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-3'>\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\n            <div>\n                <p>{name}</p>\n                <p>{email}</p>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n    return (\n    <div>\n        {\n            robots.map( (robo,i) => {\n                return (\n                    <Card key={i} id= {robots[i].id} name={robots[i].name} email={robots[i].email}/>\n                )\n            })\n        }   \n    </div>\n    )\n}\n\nexport default CardList","import React from \"react\";\n\nconst SearchBox = ({onChange}) => {\n    return (\n        <input \n            className='pa3 ba b--green bg-lighest-blue'\n            type=\"search\"\n            placeholder='search robots'\n            onChange={onChange}\n        />\n    )\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', height:'800px', border: '1px solid black'}}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1>Oops!! That doesn't Look good</h1>\n        }\n        return this.props.children;\n    }\n\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n        // console.log('constructor')\n    }\n\n    componentDidMount() {\n        // console.log('componentDidMount')\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                return response.json();\n            })\n            .then(users => {\n                this.setState({robots: users})\n            })\n        \n    }\n\n    onSearchChange = (event) => {\n        // console.log(event.target.value)\n        this.setState({ searchfield: event.target.value })\n        // console.log(filteredRobots)\n    }\n\n    render() {\n        const { robots, searchfield} = this.state\n        const filteredRobots = robots.filter(robo => {\n            return robo.name.toLowerCase().includes(searchfield);\n        })\n        // console.log('render')\n        return (!robots.length ? \n            (<h1 className ='tc f1'>Loading</h1> ): \n            (\n                <div className='tc'>\n                    <h1 className='f2'>RoboFriends</h1>\n                    <SearchBox onChange={this.onSearchChange}/> \n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots = {filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        );\n    }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}